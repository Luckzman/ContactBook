# version: 2.1
# jobs:
#   build:
#     docker:
#       - image: circleci/node:12.9.1-browsers
  
#     working_directory: ~/repo
# steps:
#       - checkout
      
#       - restore_cache:
#         keys:
#           - v1-dependencies-{{ checksum "package.json" }}
#           - v1-dependencies-
      
#       - run: yarn install
   
#       - save_cache:
#         paths:
#           - node_modules
#         key: v1-dependencies-{{ checksum "package.json" }}
    

#       - run: yarn test

version: 2.1 # use CircleCI 2.0
# orbs:
#   snyk: snyk/snyk@0.0.8
#   cypress: cypress-io/cypress@1

jobs:
  build:
    docker:
      - image: circleci/node:10
    steps:
      - checkout # special step to check out source code to working directory

      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          keys: 
             - v1-dependencies-{{ checksum "package.json" }}
            # - v1-repo-{{ checksum "package-lock.json" }}

      - run:
          name: Install dependencies with NPM
          command: yarn install # replace with `yarn install` if using yarn

      - save_cache: # special step to save the dependency cache
          key: v1-dependencies-{{ checksum "package.json" }}
          # key: v1-repo-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"

      # - run: yarn ci:cypress-run

      # - snyk/scan:
      #     fail-on-issues: false
      #     monitor-on-build: false
      #     severity-threshold: high

      - run:
          name: Run tests
          # Runs jest with "--maxWorkers=2" argument to avoid OOM issues
          command: yarn test # replace with `yarn test` if using yarn

      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run: # run tests
          name: Run Test and Coverage
          command: |
            ./cc-test-reporter before-build
            npm test -- --coverage
            ./cc-test-reporter after-build --exit-code $?

      - store_artifacts: 
          path: test-results

      - store_test_results:
          path: test-results

workflows:
  version: 2
  Build and Test:
    jobs:
      - build
      # - cypress/run:
      #     record: true